version: '3.8'

services:
  # Zookeeper - requerido por Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - microservices-network
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Servidor de configuración - debe iniciar primero
  cooperapp-cloudserver:
    build:
      context: ./cooperApp-cloud  # Ajusta la ruta según tu estructura de directorios
      dockerfile: Dockerfile
    container_name: cooperapp-cloud
    ports:
      - "8888:8888"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Servidor de descubrimiento - depende del config server
  discovery-server:
    build:
      context: ./cooperApp-discovery  # Ajusta la ruta según tu estructura de directorios
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    depends_on:
      cooperapp-cloudserver:  # Corregido: era config-server, ahora coincide con el nombre del servicio
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - CONFIG_SERVER_URL=http://cooperapp-cloudserver:8888  # Corregido: nombre del servicio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Gateway - depende del discovery server
  gateway:
    build:
      context: ./cooperApp-gateway  # Ajusta la ruta según tu estructura de directorios
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8222:8222"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - CONFIG_SERVER_URL=http://cooperapp-cloudserver:8888  # Corregido: nombre del servicio
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka

  # Servicio de notificación
  notificacion-service:
    build:
      context: ./cooperApp-notificacion-service  # Ajusta la ruta según tu estructura de directorios
      dockerfile: Dockerfile
    container_name: notificacion-service
    ports:
      - "8090:8090"
    depends_on:
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - CONFIG_SERVER_URL=http://cooperapp-cloudserver:8888  # Corregido: nombre del servicio
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    restart: unless-stopped

  # Aplicación monolítica principal
  cooperapp-core:
    build:
      context: ./cooperapp-core  # Ajusta la ruta según tu estructura de directorios
      dockerfile: Dockerfile
    container_name: cooperapp-core
    ports:
      - "8080:8080"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - microservices-network
    environment:
      - CONFIG_SERVER_URL=http://cooperapp-cloudserver:8888  # Corregido: nombre del servicio
      - EUREKA_SERVER_URL=http://discovery-server:8761/eureka
    restart: unless-stopped

# Definición de redes
networks:
  microservices-network:
    driver: bridge

# Definición de volúmenes
volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data: